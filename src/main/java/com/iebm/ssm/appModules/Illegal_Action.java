package com.iebm.ssm.appModules;import com.iebm.ssm.pageObjects.IllegalPage;import com.iebm.ssm.util.Constant;import com.iebm.ssm.util.PageNumInfo;import com.iebm.ssm.util.UpdateAttribute;import org.openqa.selenium.support.ui.Select;/* *TODO * 疑点查询 *LC *下午3:41:06 */public class Illegal_Action {    private IllegalPage page;    public Illegal_Action() {        // TODO Auto-generated constructor stub        page = new IllegalPage();    }    /**     *     * @throws Exception     *             TODO 进入疑点查询页面 LC 上午10:34:30     */    public void openPage() throws Exception {        page.nav().click();        Thread.sleep(300);        page.title().click();        Thread.sleep(3000);    }    /**     * 设置查询条件查询数据     * @param startdate,enddate     * @throws Exception     */    public void setStartDate(String startdate,String enddate) throws Exception {        UpdateAttribute.removeAttribute(Constant.driver, page.startdate_input(), "readonly");        page.startdate_input().clear();        page.startdate_input().sendKeys(startdate);        UpdateAttribute.removeAttribute(Constant.driver, page.enddate_input(), "readonly");        page.enddate_input().clear();        page.enddate_input().sendKeys(enddate);    }    public void setCondition(String hospital,String hospitallevel,String disease,String handleState,String startdate,String enddate,String ruleNum,String siCode,String illegalClass,String insuredName) throws Exception {        page.reset_btn();        if(hospital!=null) {            page.hospital_img().click();            HospitalSelect_Action hospitalSelect_action = new HospitalSelect_Action();            hospitalSelect_action.findHospital(hospital);        }        if(hospitallevel!=null){            Select select = new Select(page.hospital_level_select());            select.selectByVisibleText(hospitallevel);        }        if(disease!=null){            page.disease_img().click();            DiseaseSelect_Action diseaseSelect_action = new DiseaseSelect_Action();            diseaseSelect_action.finddisease(disease);        }        if(handleState!=null){            Select select = new Select(page.handleState_select());            select.selectByVisibleText(handleState);        }        if(startdate!=null){           this.setStartDate(startdate, enddate );        }        if(ruleNum!=null){            Select select = new Select(page.ruleNum_select());            select.selectByVisibleText(ruleNum);        }        if(siCode!=null){            page.siCode_input().sendKeys(siCode);        }        if(illegalClass!=null){            Select select = new Select(page.illegalClass_select());            select.selectByVisibleText(illegalClass);        }        if(insuredName!=null){            page.insuredName_input().sendKeys(insuredName);        }        page.query_btn().click();        PageNumInfo pageInfo = new PageNumInfo(page.pageArea_table());        String curPageNo = pageInfo.getCurrentPageNo();        String totalPageNo = pageInfo.getCurrentPageNo();    }}