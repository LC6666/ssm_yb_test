package com.iebm.ssm.pageObjects;import com.iebm.ssm.util.Constant;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import com.iebm.ssm.util.ObjectMap;/* *TODO *LC *下午3:41:06 */public class IllegalPage {    private WebElement element = null;    private ObjectMap  objectmap = new ObjectMap("./resource/illegalPageMap.properties");    private WebDriver driver;    public IllegalPage() {        // TODO Auto-generated constructor stub        this.driver = Constant.driver;    }    public WebElement title() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.title"));        return element;    }    public WebElement nav() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.nav"));        return element;    }    public WebElement tab() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.tab"));        return element;    }    public WebElement hospital() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.hospital"));        return element;    }    public WebElement hospitalbtn() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.hospitalbtn"));        return element;    }    public WebElement hospitalLevel() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.hospitalLevel"));        return element;    }    public WebElement disease() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.disease"));        return element;    }    public WebElement diseasebtn() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.diseasebtn"));        return element;    }    public WebElement handleState() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.handleState"));        return element;    }    public WebElement startdate() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.startdate"));        return element;    }    public WebElement enddate() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.enddate"));        return element;    }    public WebElement ruleNum() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.ruleNum"));        return element;    }    public WebElement siCode() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.siCode"));        return element;    }    public WebElement illegalClass() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.illegalClass"));        return element;    }    public WebElement insuredName() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.insuredName"));        return element;    }    public WebElement querybtn() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.querybtn"));        return element;    }    public WebElement table() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.table"));        return element;    }    public WebElement totalPages() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.totalPages"));        return element;    }    public WebElement currentPage() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.currentPage"));        return element;    }    public WebElement nextPage() throws Exception{        element = driver.findElement(objectmap.getLocator("ssm.illegal.nextPage"));        return element;    }}